locals {
  # Workaround terraform: Cannot have conditional modules or count in module
  opentest_resource_count = var.use_opentest == "true" ? 1 : 0
}

module "opentest" {
    opentest_resource_count = local.opentest_resource_count
    source = "./transit-opentest"
    region = "${var.region}"

    public_subnet = var.vpn_subnet
    vpc_id = local.mhs_vpc_id
    az = data.aws_availability_zones.all.names[0]
    my_ip = var.my_ip
    main_route_table_id = local.mhs_vpc_route_table_id
    ssh_keypair_name = aws_key_pair.mhs-key.key_name
}


##############
# Opentest connectivity
##############

# Allow outbound HTTP requests from MHS outbound security group to Opentest
resource "aws_security_group_rule" "mhs_outbound_security_group_opentest_http_proxy_egress_rule" {
  security_group_id = aws_security_group.mhs_outbound_security_group.id
  type = "egress"
  from_port = 443
  to_port = 443
  protocol = "tcp"
  cidr_blocks = [var.opentest_cidr]
  description = "Allow outbound requests to the HTTP proxy to Opentest"
  count = local.opentest_resource_count
}

# Allow outbound LDAP requests from MHS route security group to Opentest
resource "aws_security_group_rule" "mhs_route_security_group_opentest_ldap_proxy_egress_rule" {
  security_group_id = aws_security_group.mhs_route_security_group.id
  type = "egress"
  from_port = 389
  to_port = 389
  protocol = "tcp"
  cidr_blocks = [var.opentest_cidr]
  description = "Allow outbound LDAP requests to Opentest"
  count = local.opentest_resource_count
}
